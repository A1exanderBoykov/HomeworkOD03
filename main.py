mas = [5, 7, 4, 3, 8, 2]
n = 6
for run in range(n-1):
   for i in range(n-1-run):
       if mas[i] > mas[i + 1]:
           mas[i], mas[i + 1] = mas[i + 1], mas[i]
print(mas)

### Временная сложность

Алгоритм состоит из двух вложенных циклов:

1. Внешний цикл `for run in range(n-1)` выполняется \(n-1\) раз.
2. Внутренний цикл `for i in range(n-1-run)` выполняется от 1 до \(n-1\) раз, уменьшаясь на 1 с каждой итерацией внешнего цикла.

В худшем случае (например, если массив отсортирован в обратном порядке), каждый элемент необходимо будет сравнить с каждым другим элементом.
Таким образом, количество операций сравнения и обменов будет пропорционально квадрату количества элементов в массиве.

Поэтому временная сложность алгоритма сортировки пузырьком составляет \(O(n^2)\).

### Пространственная сложность

Сортировка пузырьком является алгоритмом сортировки на месте, что означает, что она не требует дополнительного пространства, пропорционального числу элементов в массиве. 
Используется только небольшое количество дополнительной памяти для хранения временных переменных, таких как индексы и временные переменные для обмена значениями.

Таким образом, пространственная сложность данного алгоритма составляет \(O(1)\).

В итоге:

- **Временная сложность**: \(O(n^2)\)
- **Пространственная сложность**: \(O(1)\)
